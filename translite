Глава II
Вступление
Теперь вы готовы создавать свои первые веб-приложения, как профессионалы. Если вы не возражали,
Интернет - это огромный и богатый мир, позволяющий быстро предоставлять данные и контент каждому
во всем мире.
Теперь вы знаете основы, вот и настало время покинуть эти старомодные списки дел
и сайты электронного бизнеса, и улететь к более крупным проектам.
Кроме того, здесь наступает время для вас, чтобы открыть для себя новые понятия и красоту:
• Адаптивный дизайн
• DOM Manipulation
• отладка SQL
• Подделка межсайтовых запросов
• Распределение ресурсов между источниками

Глава III
Цели
Этот веб-проект ставит перед вами задачу создать небольшое веб-приложение, позволяющее вам
сделать основные фото и видео редактирования с помощью веб-камеры и некоторых предопределенных изображений.
Очевидно, что эти изображения должны иметь альфа-канал, в противном случае ваш
суперпозиция не будет иметь ожидаемого эффекта!
Пользователи приложения должны иметь возможность выбрать изображение в списке наложенных изображений (для
например, рамку с картинкой или другое «мы не хотим знать, для чего вы это используете»
объекты), сделайте снимок с его / ее веб-камерой и восхититесь результатом, который должен смешиваться
обе картинки.
Все захваченные изображения должны быть публичными, симпатичными и комментируемыми

Глава IV
Основные инструкции
• Этот проект будет корректироваться только людьми. Вам разрешено организовать и назвать
ваши файлы, как вы считаете нужным, но вы должны следовать следующим правилам.
• Вам необходимо отправить файл с именем author, содержащий ваш логин, за которым следует новая строка
в корне вашего хранилища.
• Ваше веб-приложение не должно выдавать ошибок, предупреждений или строк журнала в любой консоли,
на стороне сервера и на стороне клиента. Тем не менее, из-за отсутствия HTTPS, любая ошибка, связанная с
к getUserMedia () допускаются.
• Вы должны использовать только один язык PHP для создания своего серверного приложения, просто
стандартная библиотека.
• На стороне клиента ваши страницы должны использовать HTML, CSS и JavaScript.
• Каждый фреймворк, микро-фреймворк или библиотека, которые вы не создали, полностью
запрещено, за исключением CSS-фреймворков, которым не требуется запрещенный JavaScript.
• Вы должны использовать драйвер абстракции PDO для связи с вашей базой данных,
это должно быть запрашиваемым с SQL. Режим ошибки этого драйвера должен быть установлен на
PDO :: ERRMODE_EXCEPTION
• Ваше приложение не должно содержать утечек в системе безопасности. Вы должны справиться хотя бы с делами
упоминается в обязательной части. Тем не менее, вам рекомендуется идти глубже
в безопасность вашего приложения, подумайте о конфиденциальности ваших данных!
• Вы можете свободно использовать любой веб-сервер, например Apache, Nginx или даже встроенный
webserver1
,
• Ваше веб-приложение должно быть по крайней мере совместимо с Firefox (> = 41) и
Хром (> = 46).
1http://php.net/manual/en/features.commandline.webserver.php

Глава V
Обязательная часть
V.1 Общие черты
Вы разработаете веб-приложение. Даже если это не требуется, попробуйте структурировать
приложение (например, приложение MVC).
Ваш сайт должен иметь приличный макет страницы (то есть, по крайней мере, заголовок, основной раздел
и нижний колонтитул), иметь возможность корректно отображать на мобильных устройствах и иметь адаптированный макет
на небольших разрешениях.
Все ваши формы должны иметь правильные проверки и весь сайт должен быть защищен.
Этот пункт ОБЯЗАТЕЛЬНЫЙ и должен быть проверен, когда ваша заявка будет оценена. Чтобы иметь представление, вот некоторые вещи, которые НЕ считаются БЕЗОПАСНЫМИ:
• Храните простые или незашифрованные пароли в базе данных.
• Предлагать возможность вставлять HTML или «пользовательский» JavaScript в плохо защищенные переменные.
• Предложить возможность загружать нежелательный контент на сервер.
• Предложить возможность изменения SQL-запроса.
• Использовать внешнюю форму для манипулирования так называемыми личными данными.


V.2 Функции пользователя
• Приложение должно позволять пользователю зарегистрироваться, запрашивая хотя бы действующий адрес электронной почты.
адрес, имя пользователя и пароль с минимальным уровнем сложности.
• В конце процесса регистрации пользователь должен подтвердить свою учетную запись через
Уникальная ссылка отправляется на электронный адрес, указанный в регистрационной форме.
• Затем пользователь должен иметь возможность подключиться к вашему приложению, используя свое имя пользователя.
и его пароль. Он также должен быть в состоянии сказать приложению, чтобы отправить пароль
переинициализация почты, если он забыл свой пароль.
• Пользователь должен иметь возможность отключиться в один клик в любое время на любой странице.
• После подключения пользователь должен изменить свое имя пользователя, почтовый адрес или пароль.
Особенности галереи V.3
• Эта часть должна быть общедоступной и должна отображать все изображения, отредактированные всеми пользователями,
упорядочено по дате создания. Это должно также позволить (только) подключенному пользователю нравиться
их и / или комментировать их.
• Когда изображение получает новый комментарий, автор изображения должен быть уведомлен
по электронной почте. Это предпочтение должно быть установлено как истинное по умолчанию, но может быть отключено в
предпочтения пользователя.
• Список изображений должен быть разбит на страницы, не менее 5 элементов на страницу.

Особенности редактирования
Рисунок V.1: просто идея макета страницы редактирования
Эта часть должна быть доступна только пользователям, которые аутентифицированы / подключены и аккуратно отклоняют всех других пользователей, которые пытаются получить к ней доступ без успешного входа в систему.
Эта страница должна содержать 2 раздела:
• Основной раздел, содержащий предварительный просмотр веб-камеры пользователя, список наложенных
изображения и кнопка, позволяющая сделать снимок.
• Боковой раздел, отображающий миниатюры всех предыдущих сделанных снимков.
Ваш макет страницы обычно должен выглядеть так, как показано на рисунке V.1.
• Наложимые изображения должны выбираться, а кнопка, позволяющая сделать снимок, должна быть неактивной (не активируемой), если не было наложенного изображения.
выбран.
• Создание окончательного изображения (например, наложение двух изображений)
должно быть сделано на стороне сервера, в PHP.
• Поскольку не у всех есть веб-камера, вы должны разрешить загрузку изображения пользователя
вместо того, чтобы захватить один с веб-камерой.
• Пользователь должен иметь возможность удалять свои отредактированные изображения, но только его, а не других пользователей.
творения.

V.5 Ограничения и обязательные вещи
Подводя итог, ваше приложение Über должно соответствовать следующим технологическим решениям:
• Авторизованные языки:
Server [Сервер] PHP
Client [Клиент] HTML - CSS - JavaScript (только с API нативного браузера)
• Авторизованные рамки:
Server [Сервер] Нет
Client [Клиент] CSS-фреймворки допускаются, если только он не добавляет запрещенный JavaScript.
Ваш проект обязательно должен содержать:
• файл index.php, содержащий точку входа вашего сайта и расположенный в корне
вашей файловой иерархии.
• файл config / setup.php, способный создавать или заново создавать схему базы данных,
используя информацию, содержащуюся в файле config / database.php.
• Файл config / database.php, содержащий конфигурацию вашей базы данных, которая будет
создается через PDO в следующем формате:
<? PHP
$ DB_DSN = ...;
$ DB_USER = ...;
$ DB_PASSWORD = ...;
DSN (имя источника данных) содержит необходимую информацию, необходимую для подключения к
база данных, например "mysql: dbname = testdb; host = 127.0.0.1". Как правило, DSN является
состоит из имени драйвера PDO, за которым следует специальный синтаксис для этого драйвера. За
подробнее смотрите документацию по PDO каждого драйвера1
,Глава VI
 Бонусная часть
 Если требуемая часть выполнена полностью и безупречно, вы можете добавить любой бонус, который пожелаете; Oни
 будут оценены вашими рецензентами. Однако вы все равно должны соблюдать требования
 в бонусных частях (то есть обработка изображений должна выполняться на стороне сервера).
 Если вам не хватает вдохновения, вот некоторые выводы:
 • «AJAXify» обменивается с сервером.
 • Предложите предварительный просмотр отредактированного результата в режиме реального времени прямо на веб-камере. Мы
 Следует отметить, что это гораздо проще, чем кажется.
 • Делать бесконечную нумерацию галерейной части сайта.
 • Предложить пользователю возможность поделиться своими изображениями в социальных сетях.
 • Рендеринг анимированного GIF.